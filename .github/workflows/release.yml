name: CI

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [semantic-release]

env:
  THIRD_PARTY_GIT_AUTHOR_EMAIL: ${{ secrets.THIRD_PARTY_GIT_AUTHOR_EMAIL }}
  THIRD_PARTY_GIT_AUTHOR_NAME: ${{ secrets.THIRD_PARTY_GIT_AUTHOR_NAME }}

jobs:
  job-checkout-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Install NR1 CLI
        run: curl -s https://cli.nr-ext.net/installer.sh | sudo bash

      - name: NR1 Nerdpack Build
        run: |
          nr1 nerdpack:build
          nr1 nerdpack:validate

  job-generate-third-party-notices:
    runs-on: ubuntu-latest
    needs: job-checkout-and-build
    permissions:
      contents: write
    steps:
      # Checkout fetch-depth: 2 because there's a check to see if package.json
      # was updated, and need at least 2 commits for the check to function properly
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 2

      - name: Setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Install OSS CLI
        run: |
          sudo npm install -g @newrelic/newrelic-oss-cli

      - name: Generate Third Party Notices
        id: generate-notices
        run: |
          if [ ! -f "third_party_manifest.json" ]; then
            echo "::error::third_party_manifest.json is missing. Must generate using the newrelic-oss-cli."
            exit 1
          fi

          # latest commit
          LATEST_COMMIT=$(git rev-parse HEAD)

          # latest commit where package.json was changed
          LAST_CHANGED_COMMIT=$(git log -1 --format=format:%H --full-diff package.json)

          if [ $LAST_CHANGED_COMMIT = $LATEST_COMMIT ]; then
            git config user.email "${{ secrets.THIRD_PARTY_GIT_AUTHOR_EMAIL }}"
            git config user.name "${{ secrets.THIRD_PARTY_GIT_AUTHOR_NAME }}"

            oss third-party manifest
            oss third-party notices

            git add third_party_manifest.json
            git add THIRD_PARTY_NOTICES.md

            git commit -m 'chore: update third-party manifest and notices [skip ci]'
            echo "::set-output name=commit::true"
          else
            echo "No change in package.json, not regenerating third-party notices"
          fi

      - name: Push Commit
        if: steps.generate-notices.outputs.commit == 'true'
        uses: ad-m/github-push-action@40bf560936a8022e68a3c00e7d2abefaf01305a6 # v0.6.0
        with:
          github_token: ${{ github.token }}
          branch: main

  job-generate-release:
    runs-on: ubuntu-latest
    needs: [job-checkout-and-build, job-generate-third-party-notices]
    permissions:
      contents: write
    steps:
      # Checkout ref: main because previous job committed third_party_notices and
      # we need to checkout main to pick up that commit
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        env:
          # Use nr-opensource-bot for authoring commits done by
          # semantic-release (rather than using @semantic-release-bot)
          GIT_AUTHOR_NAME: 'nr-opensource-bot'
          GIT_AUTHOR_EMAIL: 'opensource+bot@newrelic.com'
          GIT_COMMITTER_NAME: 'nr-opensource-bot'
          GIT_COMMITTER_EMAIL: 'opensource+bot@newrelic.com'
          GITHUB_TOKEN: ${{ github.token }}
        run: npx semantic-release@^18.0.0
